---
#all hosts
- hosts: all
  become: true
  pre_tasks:

  - name: install updates (CentOS)
    tags: always
    dnf:
      update_only: yes
      update_cache: yes
    when: ansible_distribution == "CentOS"

  - name: install updates (Ubuntu)
    tags: always
    apt:
      upgrade: dist
      update_cache: yes
    when: ansible_distribution == "Ubuntu"


#all hosts
- hosts: all
  become: true
  tasks:

  - name: create user simone
    tags: always
    user:
      name: simone
      group: root



  - name: add ssh key for simone
    tags: always
    authorized_key:
      user: simone
      key: "ssh public key "  #content for cat ~/.shh/ansible.pub

  - name: add sudoers file for simone
    tags: always
    copy:
      src: sudoer_simone   #create this inside the files dir
      dest: /etc/sudoers.d/simone 
      owner: root
      group: root
      mode: 0440
#test the above user simone : ssh -i ~/.ssh/ansible.pub simone@172.16.250.234

#Web Servers
- hosts: web_servers
  become: true
  tasks: 

  - name: install apache2 package and add php support for apache (Ubuntu)
    tags: apache,apache2,ubuntu
    apt:
      name: 
        - apache2
        - libapache2-mod-php      
      state: latest 
    when: ansible_distribution == "Ubuntu" 


  - name: install apache2 package and add php support for apache  (CentOS)
    tags: apache,centos,httpd
    dnf:
      name: 
        - httpd
        - php   
      state: latest 
    when: ansible_distribution == "CentOS"


  - name: start httpd (CentOS)
    tags: apache,centos,httpd
    service:
      name: 
        - httpd  
      state: started
      enabled: yes 
    when: ansible_distribution == "CentOS"

  - name: change email address for admin
    tags: apache,centos,httpd
    lineinfile:
      path: /etc/httpd/conf/httpd.conf
      regexp: '^ServerAdmin'
      line: ServerAdmin somebody@somewhere.net
    when: ansible_distribution == "CentOS"
    register: httpd #register a variable

  - name: restart httpd (centos)
    tags: apache,centos,httpd
    service:
      name: 
        - httpd  
      state: restarted
    when: httpd.changed #run this play when the above registered variable is changed


  - name: Copy default html file for site
    tags: apache,apache2,httpd
    copy:
      src: default_site.html  
      dest: /var/www/html/index.html
      owner: root
      group: root


#DB Servers
- hosts: db_servers
  become: true
  tasks: 

  - name: install mariadb package (Ubuntu)
    tags: db, mariadb, ubuntu
    apt:
      name: 
        - mariadb-server   
      state: latest
    when: ansible_distribution == "Ubuntu" 


  - name: install mariadb package (CentOS)
    tags: centos,db,mariadb
    dnf:
      name: 
        - mariadb  
      state: latest 
    when: ansible_distribution == "CentOS" 


#File Servers
- hosts: file_servers
  become: true
  tasks: 

  - name: install samba package (Ubuntu & CentOS)
    tags: samba
    package:
      name: 
        - Samba  
      state: latest 



#Workstations
- hosts: Workstations
  become: true
  tasks: 

  - name: install unzip
    package:
      name: unzip

  - name: install terraform
    unarchive:
      src: https://releases.hashicorp.com/terraform/0.9.1/terraform_0.9.1_linux_amd64.zip
      dest: /usr/local/bin
      remote_src: yes
      owner: root
      group: root
      mode: 0755

#to run our playbook
#edit the ansible config file to always run using our user simone
nano ansible.cfg
#inside the cfg file add our user simone
  inventory = inventory
  private_key_file = ~/.ssh/ansible
  remote_user =  simone #always run the playbook using this user

ansible-playbook  adding-users-&-bootsrapping.yml

#to list all tags
ansible-playbook --list-tags working-with-tags.yml

#to target a list of servers with a particular tag
ansible-playbook --tags centos --ask-become-pass working-with-tags.yml

#to target a list of  tags
ansible-playbook --tags "apache,db" --ask-become-pass working-with-tags.yml